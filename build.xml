<project name="Yggdrasil" default="dist" basedir=".">
  <taskdef resource="net/sf/antcontrib/antlib.xml">
    <classpath>
        <pathelement location="${basedir}/antlib/ant-contrib/ant-contrib-1.0b3.jar"/>
    </classpath>
  </taskdef>
  <taskdef resource="checkstyletask.properties">
    <classpath>
        <pathelement location="${basedir}/checkstyle/checkstyle-6.2-all.jar"/>
    </classpath>
  </taskdef>

  <description>
      Apache Ant build file for Yggdrasil
  </description>

  <!-- set global properties for this build -->
  <property name="src" location="src"/>
  <property name="build" location="build"/>
  <property name="dist"  location="dist"/>
  <property name="doc"   location="doc"/>
  <property name="javadoc-dir" location="${doc}/javadoc"/>
  <property name="checkstyle" location="checkstyle"/>

  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
  </target>

  <target name="compile" depends="init"
        description="compile the source " >
    <!-- Compile the java code from ${src} into ${build} -->
    <javac includeantruntime="false" srcdir="${src}" destdir="${build}" source="8" target="8">
      <classpath>
        <pathelement path="${classpath}"/>
        <pathelement location="lib/WPILib.jar"/>
        <pathelement location="lib/NetworkTables.jar"/>
      </classpath>
    </javac>
  </target>

  <target name="docs" depends="init"
          description="generate documentation" >
      <mkdir dir="${doc}"/>
      <mkdir dir="${javadoc-dir}"/>
      <javadoc sourcepath="${src}" destdir="${javadoc-dir}" source="8">
        <classpath>
          <pathelement path="${classpath}"/>
          <pathelement location="lib/WPILib.jar"/>
          <pathelement location="lib/NetworkTables.jar"/>
        </classpath>
      </javadoc>
      <exec executable="asciidoctor">
        <arg line="-D doc/ README.asciidoc"/>
      </exec>
  </target>

  <target name="dist" depends="compile,docs,checkstyle"
        description="generate the distribution" >
    <!-- Create the distribution directory -->
    <mkdir dir="${dist}/lib"/>
    <exec executable="git" outputproperty="git.tagstring">
        <arg line="describe --exact-match HEAD"/>
    </exec>

    <if>
        <or>
            <contains string="${git.tagstring}" substring="No names found"/>
            <contains string="${git.tagstring}" substring="fatal"/>
        </or>
        <then>
            <property name="dist-suffix" value="-${DSTAMP}-${TSTAMP}"/>
        </then>
        <else>
            <property name="dist-suffix" value="-${git.tagstring}-RELEASE"/>
        </else>
    </if>

    <jar jarfile="${dist}/lib/${ant.project.name}${dist-suffix}.jar" basedir="${build}"/>
    <jar jarfile="${dist}/lib/${ant.project.name}${dist-suffix}-javadoc.jar" basedir="${javadoc-dir}"/>
    <zip destfile="${dist}/lib/${ant.project.name}${dist-suffix}-all.zip" whenempty="fail" duplicate="fail">
        <fileset dir="${dist}/lib"/>
        <fileset file="LICENSE"/>
        <fileset file="README.asciidoc"/>
        <fileset file="${doc}/README.html"/>
        <fileset file="definitelynotreal"/>
    </zip>
  </target>

  <target name="checkstyle-available">
      <condition property="checkstyle-jar-available">
          <resourcecount when="greater" count="0">
              <fileset file="${checkstyle}/checkstyle*.jar"/>
          </resourcecount>
      </condition>
  </target>

  <target name="checkstyle" depends="init,checkstyle-available"
          description="generates a report of code convention violations."
          if="checkstyle-jar-available"
          >
    <mkdir dir="${dist}"/>
    <checkstyle config="${checkstyle}/checkstyle.xml"
                failureProperty="checkstyle.failure"
                failOnViolation="false">
            <fileset dir="${src}/ca" includes="**/*.java"/>
            <formatter type="plain" toFile="${dist}/checkstyle.txt" useFile="true"/>
    </checkstyle>
  </target>

  <target name="clean"
        description="clean up" >
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
    <delete dir="${doc}"/>
  </target>
</project>
